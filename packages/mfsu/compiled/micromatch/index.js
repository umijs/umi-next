(function(){"use strict";var e={570:function(e,t,n){const r=n(625);const u=n(666);const o=n(183);const s=n(467);const braces=(e,t={})=>{let n=[];if(Array.isArray(e)){for(let r of e){let e=braces.create(r,t);if(Array.isArray(e)){n.push(...e)}else{n.push(e)}}}else{n=[].concat(braces.create(e,t))}if(t&&t.expand===true&&t.nodupes===true){n=[...new Set(n)]}return n};braces.parse=(e,t={})=>s(e,t);braces.stringify=(e,t={})=>{if(typeof e==="string"){return r(braces.parse(e,t),t)}return r(e,t)};braces.compile=(e,t={})=>{if(typeof e==="string"){e=braces.parse(e,t)}return u(e,t)};braces.expand=(e,t={})=>{if(typeof e==="string"){e=braces.parse(e,t)}let n=o(e,t);if(t.noempty===true){n=n.filter(Boolean)}if(t.nodupes===true){n=[...new Set(n)]}return n};braces.create=(e,t={})=>{if(e===""||e.length<3){return[e]}return t.expand!==true?braces.compile(e,t):braces.expand(e,t)};e.exports=braces},666:function(e,t,n){const r=n(442);const u=n(456);const compile=(e,t={})=>{let walk=(e,n={})=>{let o=u.isInvalidBrace(n);let s=e.invalid===true&&t.escapeInvalid===true;let i=o===true||s===true;let a=t.escapeInvalid===true?"\\":"";let l="";if(e.isOpen===true){return a+e.value}if(e.isClose===true){return a+e.value}if(e.type==="open"){return i?a+e.value:"("}if(e.type==="close"){return i?a+e.value:")"}if(e.type==="comma"){return e.prev.type==="comma"?"":i?e.value:"|"}if(e.value){return e.value}if(e.nodes&&e.ranges>0){let n=u.reduce(e.nodes);let o=r(...n,{...t,wrap:false,toRegex:true});if(o.length!==0){return n.length>1&&o.length>1?`(${o})`:o}}if(e.nodes){for(let t of e.nodes){l+=walk(t,e)}}return l};return walk(e)};e.exports=compile},487:function(e){e.exports={MAX_LENGTH:1024*64,CHAR_0:"0",CHAR_9:"9",CHAR_UPPERCASE_A:"A",CHAR_LOWERCASE_A:"a",CHAR_UPPERCASE_Z:"Z",CHAR_LOWERCASE_Z:"z",CHAR_LEFT_PARENTHESES:"(",CHAR_RIGHT_PARENTHESES:")",CHAR_ASTERISK:"*",CHAR_AMPERSAND:"&",CHAR_AT:"@",CHAR_BACKSLASH:"\\",CHAR_BACKTICK:"`",CHAR_CARRIAGE_RETURN:"\r",CHAR_CIRCUMFLEX_ACCENT:"^",CHAR_COLON:":",CHAR_COMMA:",",CHAR_DOLLAR:"$",CHAR_DOT:".",CHAR_DOUBLE_QUOTE:'"',CHAR_EQUAL:"=",CHAR_EXCLAMATION_MARK:"!",CHAR_FORM_FEED:"\f",CHAR_FORWARD_SLASH:"/",CHAR_HASH:"#",CHAR_HYPHEN_MINUS:"-",CHAR_LEFT_ANGLE_BRACKET:"<",CHAR_LEFT_CURLY_BRACE:"{",CHAR_LEFT_SQUARE_BRACKET:"[",CHAR_LINE_FEED:"\n",CHAR_NO_BREAK_SPACE:"Â ",CHAR_PERCENT:"%",CHAR_PLUS:"+",CHAR_QUESTION_MARK:"?",CHAR_RIGHT_ANGLE_BRACKET:">",CHAR_RIGHT_CURLY_BRACE:"}",CHAR_RIGHT_SQUARE_BRACKET:"]",CHAR_SEMICOLON:";",CHAR_SINGLE_QUOTE:"'",CHAR_SPACE:" ",CHAR_TAB:"\t",CHAR_UNDERSCORE:"_",CHAR_VERTICAL_LINE:"|",CHAR_ZERO_WIDTH_NOBREAK_SPACE:"\ufeff"}},183:function(e,t,n){const r=n(442);const u=n(625);const o=n(456);const append=(e="",t="",n=false)=>{let r=[];e=[].concat(e);t=[].concat(t);if(!t.length)return e;if(!e.length){return n?o.flatten(t).map((e=>`{${e}}`)):t}for(let u of e){if(Array.isArray(u)){for(let e of u){r.push(append(e,t,n))}}else{for(let e of t){if(n===true&&typeof e==="string")e=`{${e}}`;r.push(Array.isArray(e)?append(u,e,n):u+e)}}}return o.flatten(r)};const expand=(e,t={})=>{let n=t.rangeLimit===void 0?1e3:t.rangeLimit;let walk=(e,s={})=>{e.queue=[];let i=s;let a=s.queue;while(i.type!=="brace"&&i.type!=="root"&&i.parent){i=i.parent;a=i.queue}if(e.invalid||e.dollar){a.push(append(a.pop(),u(e,t)));return}if(e.type==="brace"&&e.invalid!==true&&e.nodes.length===2){a.push(append(a.pop(),["{}"]));return}if(e.nodes&&e.ranges>0){let s=o.reduce(e.nodes);if(o.exceedsLimit(...s,t.step,n)){throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.")}let i=r(...s,t);if(i.length===0){i=u(e,t)}a.push(append(a.pop(),i));e.nodes=[];return}let l=o.encloseBrace(e);let c=e.queue;let p=e;while(p.type!=="brace"&&p.type!=="root"&&p.parent){p=p.parent;c=p.queue}for(let t=0;t<e.nodes.length;t++){let n=e.nodes[t];if(n.type==="comma"&&e.type==="brace"){if(t===1)c.push("");c.push("");continue}if(n.type==="close"){a.push(append(a.pop(),c,l));continue}if(n.value&&n.type!=="open"){c.push(append(c.pop(),n.value));continue}if(n.nodes){walk(n,e)}}return c};return o.flatten(walk(e))};e.exports=expand},467:function(e,t,n){const r=n(625);const{MAX_LENGTH:u,CHAR_BACKSLASH:o,CHAR_BACKTICK:s,CHAR_COMMA:i,CHAR_DOT:a,CHAR_LEFT_PARENTHESES:l,CHAR_RIGHT_PARENTHESES:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_RIGHT_CURLY_BRACE:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_RIGHT_SQUARE_BRACKET:R,CHAR_DOUBLE_QUOTE:_,CHAR_SINGLE_QUOTE:h,CHAR_NO_BREAK_SPACE:g,CHAR_ZERO_WIDTH_NOBREAK_SPACE:E}=n(487);const parse=(e,t={})=>{if(typeof e!=="string"){throw new TypeError("Expected a string")}let n=t||{};let C=typeof n.maxLength==="number"?Math.min(u,n.maxLength):u;if(e.length>C){throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${C})`)}let y={type:"root",input:e,nodes:[]};let d=[y];let x=y;let b=y;let S=0;let H=e.length;let v=0;let $=0;let m;let T={};const advance=()=>e[v++];const push=e=>{if(e.type==="text"&&b.type==="dot"){b.type="text"}if(b&&b.type==="text"&&e.type==="text"){b.value+=e.value;return}x.nodes.push(e);e.parent=x;e.prev=b;b=e;return e};push({type:"bos"});while(v<H){x=d[d.length-1];m=advance();if(m===E||m===g){continue}if(m===o){push({type:"text",value:(t.keepEscaping?m:"")+advance()});continue}if(m===R){push({type:"text",value:"\\"+m});continue}if(m===A){S++;let e=true;let t;while(v<H&&(t=advance())){m+=t;if(t===A){S++;continue}if(t===o){m+=advance();continue}if(t===R){S--;if(S===0){break}}}push({type:"text",value:m});continue}if(m===l){x=push({type:"paren",nodes:[]});d.push(x);push({type:"text",value:m});continue}if(m===c){if(x.type!=="paren"){push({type:"text",value:m});continue}x=d.pop();push({type:"text",value:m});x=d[d.length-1];continue}if(m===_||m===h||m===s){let e=m;let n;if(t.keepQuotes!==true){m=""}while(v<H&&(n=advance())){if(n===o){m+=n+advance();continue}if(n===e){if(t.keepQuotes===true)m+=n;break}m+=n}push({type:"text",value:m});continue}if(m===p){$++;let e=b.value&&b.value.slice(-1)==="$"||x.dollar===true;let t={type:"brace",open:true,close:false,dollar:e,depth:$,commas:0,ranges:0,nodes:[]};x=push(t);d.push(x);push({type:"open",value:m});continue}if(m===f){if(x.type!=="brace"){push({type:"text",value:m});continue}let e="close";x=d.pop();x.close=true;push({type:e,value:m});$--;x=d[d.length-1];continue}if(m===i&&$>0){if(x.ranges>0){x.ranges=0;let e=x.nodes.shift();x.nodes=[e,{type:"text",value:r(x)}]}push({type:"comma",value:m});x.commas++;continue}if(m===a&&$>0&&x.commas===0){let e=x.nodes;if($===0||e.length===0){push({type:"text",value:m});continue}if(b.type==="dot"){x.range=[];b.value+=m;b.type="range";if(x.nodes.length!==3&&x.nodes.length!==5){x.invalid=true;x.ranges=0;b.type="text";continue}x.ranges++;x.args=[];continue}if(b.type==="range"){e.pop();let t=e[e.length-1];t.value+=b.value+m;b=t;x.ranges--;continue}push({type:"dot",value:m});continue}push({type:"text",value:m})}do{x=d.pop();if(x.type!=="root"){x.nodes.forEach((e=>{if(!e.nodes){if(e.type==="open")e.isOpen=true;if(e.type==="close")e.isClose=true;if(!e.nodes)e.type="text";e.invalid=true}}));let e=d[d.length-1];let t=e.nodes.indexOf(x);e.nodes.splice(t,1,...x.nodes)}}while(d.length>0);push({type:"eos"});return y};e.exports=parse},625:function(e,t,n){const r=n(456);e.exports=(e,t={})=>{let stringify=(e,n={})=>{let u=t.escapeInvalid&&r.isInvalidBrace(n);let o=e.invalid===true&&t.escapeInvalid===true;let s="";if(e.value){if((u||o)&&r.isOpenOrClose(e)){return"\\"+e.value}return e.value}if(e.value){return e.value}if(e.nodes){for(let t of e.nodes){s+=stringify(t)}}return s};return stringify(e)}},456:function(e,t){t.isInteger=e=>{if(typeof e==="number"){return Number.isInteger(e)}if(typeof e==="string"&&e.trim()!==""){return Number.isInteger(Number(e))}return false};t.find=(e,t)=>e.nodes.find((e=>e.type===t));t.exceedsLimit=(e,n,r=1,u)=>{if(u===false)return false;if(!t.isInteger(e)||!t.isInteger(n))return false;return(Number(n)-Number(e))/Number(r)>=u};t.escapeNode=(e,t=0,n)=>{let r=e.nodes[t];if(!r)return;if(n&&r.type===n||r.type==="open"||r.type==="close"){if(r.escaped!==true){r.value="\\"+r.value;r.escaped=true}}};t.encloseBrace=e=>{if(e.type!=="brace")return false;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}return false};t.isInvalidBrace=e=>{if(e.type!=="brace")return false;if(e.invalid===true||e.dollar)return true;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}if(e.open!==true||e.close!==true){e.invalid=true;return true}return false};t.isOpenOrClose=e=>{if(e.type==="open"||e.type==="close"){return true}return e.open===true||e.close===true};t.reduce=e=>e.reduce(((e,t)=>{if(t.type==="text")e.push(t.value);if(t.type==="range")t.type="text";return e}),[]);t.flatten=(...e)=>{const t=[];const flat=e=>{for(let n=0;n<e.length;n++){let r=e[n];Array.isArray(r)?flat(r,t):r!==void 0&&t.push(r)}return t};flat(e);return t}},442:function(e,t,n){
/*!
 * fill-range <https://github.com/jonschlinkert/fill-range>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Licensed under the MIT License.
 */
const r=n(837);const u=n(211);const isObject=e=>e!==null&&typeof e==="object"&&!Array.isArray(e);const transform=e=>t=>e===true?Number(t):String(t);const isValidValue=e=>typeof e==="number"||typeof e==="string"&&e!=="";const isNumber=e=>Number.isInteger(+e);const zeros=e=>{let t=`${e}`;let n=-1;if(t[0]==="-")t=t.slice(1);if(t==="0")return false;while(t[++n]==="0");return n>0};const stringify=(e,t,n)=>{if(typeof e==="string"||typeof t==="string"){return true}return n.stringify===true};const pad=(e,t,n)=>{if(t>0){let n=e[0]==="-"?"-":"";if(n)e=e.slice(1);e=n+e.padStart(n?t-1:t,"0")}if(n===false){return String(e)}return e};const toMaxLen=(e,t)=>{let n=e[0]==="-"?"-":"";if(n){e=e.slice(1);t--}while(e.length<t)e="0"+e;return n?"-"+e:e};const toSequence=(e,t)=>{e.negatives.sort(((e,t)=>e<t?-1:e>t?1:0));e.positives.sort(((e,t)=>e<t?-1:e>t?1:0));let n=t.capture?"":"?:";let r="";let u="";let o;if(e.positives.length){r=e.positives.join("|")}if(e.negatives.length){u=`-(${n}${e.negatives.join("|")})`}if(r&&u){o=`${r}|${u}`}else{o=r||u}if(t.wrap){return`(${n}${o})`}return o};const toRange=(e,t,n,r)=>{if(n){return u(e,t,{wrap:false,...r})}let o=String.fromCharCode(e);if(e===t)return o;let s=String.fromCharCode(t);return`[${o}-${s}]`};const toRegex=(e,t,n)=>{if(Array.isArray(e)){let t=n.wrap===true;let r=n.capture?"":"?:";return t?`(${r}${e.join("|")})`:e.join("|")}return u(e,t,n)};const rangeError=(...e)=>new RangeError("Invalid range arguments: "+r.inspect(...e));const invalidRange=(e,t,n)=>{if(n.strictRanges===true)throw rangeError([e,t]);return[]};const invalidStep=(e,t)=>{if(t.strictRanges===true){throw new TypeError(`Expected step "${e}" to be a number`)}return[]};const fillNumbers=(e,t,n=1,r={})=>{let u=Number(e);let o=Number(t);if(!Number.isInteger(u)||!Number.isInteger(o)){if(r.strictRanges===true)throw rangeError([e,t]);return[]}if(u===0)u=0;if(o===0)o=0;let s=u>o;let i=String(e);let a=String(t);let l=String(n);n=Math.max(Math.abs(n),1);let c=zeros(i)||zeros(a)||zeros(l);let p=c?Math.max(i.length,a.length,l.length):0;let f=c===false&&stringify(e,t,r)===false;let A=r.transform||transform(f);if(r.toRegex&&n===1){return toRange(toMaxLen(e,p),toMaxLen(t,p),true,r)}let R={negatives:[],positives:[]};let push=e=>R[e<0?"negatives":"positives"].push(Math.abs(e));let _=[];let h=0;while(s?u>=o:u<=o){if(r.toRegex===true&&n>1){push(u)}else{_.push(pad(A(u,h),p,f))}u=s?u-n:u+n;h++}if(r.toRegex===true){return n>1?toSequence(R,r):toRegex(_,null,{wrap:false,...r})}return _};const fillLetters=(e,t,n=1,r={})=>{if(!isNumber(e)&&e.length>1||!isNumber(t)&&t.length>1){return invalidRange(e,t,r)}let u=r.transform||(e=>String.fromCharCode(e));let o=`${e}`.charCodeAt(0);let s=`${t}`.charCodeAt(0);let i=o>s;let a=Math.min(o,s);let l=Math.max(o,s);if(r.toRegex&&n===1){return toRange(a,l,false,r)}let c=[];let p=0;while(i?o>=s:o<=s){c.push(u(o,p));o=i?o-n:o+n;p++}if(r.toRegex===true){return toRegex(c,null,{wrap:false,options:r})}return c};const fill=(e,t,n,r={})=>{if(t==null&&isValidValue(e)){return[e]}if(!isValidValue(e)||!isValidValue(t)){return invalidRange(e,t,r)}if(typeof n==="function"){return fill(e,t,1,{transform:n})}if(isObject(n)){return fill(e,t,0,n)}let u={...r};if(u.capture===true)u.wrap=true;n=n||u.step||1;if(!isNumber(n)){if(n!=null&&!isObject(n))return invalidStep(n,u);return fill(e,t,1,n)}if(isNumber(e)&&isNumber(t)){return fillNumbers(e,t,n,u)}return fillLetters(e,t,Math.max(Math.abs(n),1),u)};e.exports=fill},387:function(e){
/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Released under the MIT License.
 */
e.exports=function(e){if(typeof e==="number"){return e-e===0}if(typeof e==="string"&&e.trim()!==""){return Number.isFinite?Number.isFinite(+e):isFinite(+e)}return false}},224:function(e,t,n){const r=n(837);const u=n(570);const o=n(376);const s=n(658);const isEmptyString=e=>e===""||e==="./";const micromatch=(e,t,n)=>{t=[].concat(t);e=[].concat(e);let r=new Set;let u=new Set;let s=new Set;let i=0;let onResult=e=>{s.add(e.output);if(n&&n.onResult){n.onResult(e)}};for(let s=0;s<t.length;s++){let a=o(String(t[s]),{...n,onResult:onResult},true);let l=a.state.negated||a.state.negatedExtglob;if(l)i++;for(let t of e){let e=a(t,true);let n=l?!e.isMatch:e.isMatch;if(!n)continue;if(l){r.add(e.output)}else{r.delete(e.output);u.add(e.output)}}}let a=i===t.length?[...s]:[...u];let l=a.filter((e=>!r.has(e)));if(n&&l.length===0){if(n.failglob===true){throw new Error(`No matches found for "${t.join(", ")}"`)}if(n.nonull===true||n.nullglob===true){return n.unescape?t.map((e=>e.replace(/\\/g,""))):t}}return l};micromatch.match=micromatch;micromatch.matcher=(e,t)=>o(e,t);micromatch.isMatch=(e,t,n)=>o(t,n)(e);micromatch.any=micromatch.isMatch;micromatch.not=(e,t,n={})=>{t=[].concat(t).map(String);let r=new Set;let u=[];let onResult=e=>{if(n.onResult)n.onResult(e);u.push(e.output)};let o=micromatch(e,t,{...n,onResult:onResult});for(let e of u){if(!o.includes(e)){r.add(e)}}return[...r]};micromatch.contains=(e,t,n)=>{if(typeof e!=="string"){throw new TypeError(`Expected a string: "${r.inspect(e)}"`)}if(Array.isArray(t)){return t.some((t=>micromatch.contains(e,t,n)))}if(typeof t==="string"){if(isEmptyString(e)||isEmptyString(t)){return false}if(e.includes(t)||e.startsWith("./")&&e.slice(2).includes(t)){return true}}return micromatch.isMatch(e,t,{...n,contains:true})};micromatch.matchKeys=(e,t,n)=>{if(!s.isObject(e)){throw new TypeError("Expected the first argument to be an object")}let r=micromatch(Object.keys(e),t,n);let u={};for(let t of r)u[t]=e[t];return u};micromatch.some=(e,t,n)=>{let r=[].concat(e);for(let e of[].concat(t)){let t=o(String(e),n);if(r.some((e=>t(e)))){return true}}return false};micromatch.every=(e,t,n)=>{let r=[].concat(e);for(let e of[].concat(t)){let t=o(String(e),n);if(!r.every((e=>t(e)))){return false}}return true};micromatch.all=(e,t,n)=>{if(typeof e!=="string"){throw new TypeError(`Expected a string: "${r.inspect(e)}"`)}return[].concat(t).every((t=>o(t,n)(e)))};micromatch.capture=(e,t,n)=>{let r=s.isWindows(n);let u=o.makeRe(String(e),{...n,capture:true});let i=u.exec(r?s.toPosixSlashes(t):t);if(i){return i.slice(1).map((e=>e===void 0?"":e))}};micromatch.makeRe=(...e)=>o.makeRe(...e);micromatch.scan=(...e)=>o.scan(...e);micromatch.parse=(e,t)=>{let n=[];for(let r of[].concat(e||[])){for(let e of u(String(r),t)){n.push(o.parse(e,t))}}return n};micromatch.braces=(e,t)=>{if(typeof e!=="string")throw new TypeError("Expected a string");if(t&&t.nobrace===true||!/\{.*\}/.test(e)){return[e]}return u(e,t)};micromatch.braceExpand=(e,t)=>{if(typeof e!=="string")throw new TypeError("Expected a string");return micromatch.braces(e,{...t,expand:true})};e.exports=micromatch},376:function(e,t,n){e.exports=n(631)},820:function(e,t,n){const r=n(17);const u="\\\\/";const o=`[^${u}]`;const s="\\.";const i="\\+";const a="\\?";const l="\\/";const c="(?=.)";const p="[^/]";const f=`(?:${l}|$)`;const A=`(?:^|${l})`;const R=`${s}{1,2}${f}`;const _=`(?!${s})`;const h=`(?!${A}${R})`;const g=`(?!${s}{0,1}${f})`;const E=`(?!${R})`;const C=`[^.${l}]`;const y=`${p}*?`;const d={DOT_LITERAL:s,PLUS_LITERAL:i,QMARK_LITERAL:a,SLASH_LITERAL:l,ONE_CHAR:c,QMARK:p,END_ANCHOR:f,DOTS_SLASH:R,NO_DOT:_,NO_DOTS:h,NO_DOT_SLASH:g,NO_DOTS_SLASH:E,QMARK_NO_DOT:C,STAR:y,START_ANCHOR:A};const x={...d,SLASH_LITERAL:`[${u}]`,QMARK:o,STAR:`${o}*?`,DOTS_SLASH:`${s}{1,2}(?:[${u}]|$)`,NO_DOT:`(?!${s})`,NO_DOTS:`(?!(?:^|[${u}])${s}{1,2}(?:[${u}]|$))`,NO_DOT_SLASH:`(?!${s}{0,1}(?:[${u}]|$))`,NO_DOTS_SLASH:`(?!${s}{1,2}(?:[${u}]|$))`,QMARK_NO_DOT:`[^.${u}]`,START_ANCHOR:`(?:^|[${u}])`,END_ANCHOR:`(?:[${u}]|$)`};const b={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};e.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:b,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:r.sep,extglobChars(e){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${e.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(e){return e===true?x:d}}},986:function(e,t,n){const r=n(820);const u=n(658);const{MAX_LENGTH:o,POSIX_REGEX_SOURCE:s,REGEX_NON_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_BACKREF:a,REPLACEMENTS:l}=r;const expandRange=(e,t)=>{if(typeof t.expandRange==="function"){return t.expandRange(...e,t)}e.sort();const n=`[${e.join("-")}]`;try{new RegExp(n)}catch(t){return e.map((e=>u.escapeRegex(e))).join("..")}return n};const syntaxError=(e,t)=>`Missing ${e}: "${t}" - use "\\\\${t}" to match literal characters`;const parse=(e,t)=>{if(typeof e!=="string"){throw new TypeError("Expected a string")}e=l[e]||e;const n={...t};const c=typeof n.maxLength==="number"?Math.min(o,n.maxLength):o;let p=e.length;if(p>c){throw new SyntaxError(`Input length: ${p}, exceeds maximum allowed length: ${c}`)}const f={type:"bos",value:"",output:n.prepend||""};const A=[f];const R=n.capture?"":"?:";const _=u.isWindows(t);const h=r.globChars(_);const g=r.extglobChars(h);const{DOT_LITERAL:E,PLUS_LITERAL:C,SLASH_LITERAL:y,ONE_CHAR:d,DOTS_SLASH:x,NO_DOT:b,NO_DOT_SLASH:S,NO_DOTS_SLASH:H,QMARK:v,QMARK_NO_DOT:$,STAR:m,START_ANCHOR:T}=h;const globstar=e=>`(${R}(?:(?!${T}${e.dot?x:E}).)*?)`;const L=n.dot?"":b;const O=n.dot?v:$;let w=n.bash===true?globstar(n):m;if(n.capture){w=`(${w})`}if(typeof n.noext==="boolean"){n.noextglob=n.noext}const N={input:e,index:-1,start:0,dot:n.dot===true,consumed:"",output:"",prefix:"",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};e=u.removePrefix(e,N);p=e.length;const k=[];const I=[];const M=[];let P=f;let B;const eos=()=>N.index===p-1;const G=N.peek=(t=1)=>e[N.index+t];const D=N.advance=()=>e[++N.index]||"";const remaining=()=>e.slice(N.index+1);const consume=(e="",t=0)=>{N.consumed+=e;N.index+=t};const append=e=>{N.output+=e.output!=null?e.output:e.value;consume(e.value)};const negate=()=>{let e=1;while(G()==="!"&&(G(2)!=="("||G(3)==="?")){D();N.start++;e++}if(e%2===0){return false}N.negated=true;N.start++;return true};const increment=e=>{N[e]++;M.push(e)};const decrement=e=>{N[e]--;M.pop()};const push=e=>{if(P.type==="globstar"){const t=N.braces>0&&(e.type==="comma"||e.type==="brace");const n=e.extglob===true||k.length&&(e.type==="pipe"||e.type==="paren");if(e.type!=="slash"&&e.type!=="paren"&&!t&&!n){N.output=N.output.slice(0,-P.output.length);P.type="star";P.value="*";P.output=w;N.output+=P.output}}if(k.length&&e.type!=="paren"){k[k.length-1].inner+=e.value}if(e.value||e.output)append(e);if(P&&P.type==="text"&&e.type==="text"){P.value+=e.value;P.output=(P.output||"")+e.value;return}e.prev=P;A.push(e);P=e};const extglobOpen=(e,t)=>{const r={...g[t],conditions:1,inner:""};r.prev=P;r.parens=N.parens;r.output=N.output;const u=(n.capture?"(":"")+r.open;increment("parens");push({type:e,value:t,output:N.output?"":d});push({type:"paren",extglob:true,value:D(),output:u});k.push(r)};const extglobClose=e=>{let r=e.close+(n.capture?")":"");let u;if(e.type==="negate"){let o=w;if(e.inner&&e.inner.length>1&&e.inner.includes("/")){o=globstar(n)}if(o!==w||eos()||/^\)+$/.test(remaining())){r=e.close=`)$))${o}`}if(e.inner.includes("*")&&(u=remaining())&&/^\.[^\\/.]+$/.test(u)){const n=parse(u,{...t,fastpaths:false}).output;r=e.close=`)${n})${o})`}if(e.prev.type==="bos"){N.negatedExtglob=true}}push({type:"paren",extglob:true,value:B,output:r});decrement("parens")};if(n.fastpaths!==false&&!/(^[*!]|[/()[\]{}"])/.test(e)){let r=false;let o=e.replace(a,((e,t,n,u,o,s)=>{if(u==="\\"){r=true;return e}if(u==="?"){if(t){return t+u+(o?v.repeat(o.length):"")}if(s===0){return O+(o?v.repeat(o.length):"")}return v.repeat(n.length)}if(u==="."){return E.repeat(n.length)}if(u==="*"){if(t){return t+u+(o?w:"")}return w}return t?e:`\\${e}`}));if(r===true){if(n.unescape===true){o=o.replace(/\\/g,"")}else{o=o.replace(/\\+/g,(e=>e.length%2===0?"\\\\":e?"\\":""))}}if(o===e&&n.contains===true){N.output=e;return N}N.output=u.wrapOutput(o,N,t);return N}while(!eos()){B=D();if(B==="\0"){continue}if(B==="\\"){const e=G();if(e==="/"&&n.bash!==true){continue}if(e==="."||e===";"){continue}if(!e){B+="\\";push({type:"text",value:B});continue}const t=/^\\+/.exec(remaining());let r=0;if(t&&t[0].length>2){r=t[0].length;N.index+=r;if(r%2!==0){B+="\\"}}if(n.unescape===true){B=D()}else{B+=D()}if(N.brackets===0){push({type:"text",value:B});continue}}if(N.brackets>0&&(B!=="]"||P.value==="["||P.value==="[^")){if(n.posix!==false&&B===":"){const e=P.value.slice(1);if(e.includes("[")){P.posix=true;if(e.includes(":")){const e=P.value.lastIndexOf("[");const t=P.value.slice(0,e);const n=P.value.slice(e+2);const r=s[n];if(r){P.value=t+r;N.backtrack=true;D();if(!f.output&&A.indexOf(P)===1){f.output=d}continue}}}}if(B==="["&&G()!==":"||B==="-"&&G()==="]"){B=`\\${B}`}if(B==="]"&&(P.value==="["||P.value==="[^")){B=`\\${B}`}if(n.posix===true&&B==="!"&&P.value==="["){B="^"}P.value+=B;append({value:B});continue}if(N.quotes===1&&B!=='"'){B=u.escapeRegex(B);P.value+=B;append({value:B});continue}if(B==='"'){N.quotes=N.quotes===1?0:1;if(n.keepQuotes===true){push({type:"text",value:B})}continue}if(B==="("){increment("parens");push({type:"paren",value:B});continue}if(B===")"){if(N.parens===0&&n.strictBrackets===true){throw new SyntaxError(syntaxError("opening","("))}const e=k[k.length-1];if(e&&N.parens===e.parens+1){extglobClose(k.pop());continue}push({type:"paren",value:B,output:N.parens?")":"\\)"});decrement("parens");continue}if(B==="["){if(n.nobracket===true||!remaining().includes("]")){if(n.nobracket!==true&&n.strictBrackets===true){throw new SyntaxError(syntaxError("closing","]"))}B=`\\${B}`}else{increment("brackets")}push({type:"bracket",value:B});continue}if(B==="]"){if(n.nobracket===true||P&&P.type==="bracket"&&P.value.length===1){push({type:"text",value:B,output:`\\${B}`});continue}if(N.brackets===0){if(n.strictBrackets===true){throw new SyntaxError(syntaxError("opening","["))}push({type:"text",value:B,output:`\\${B}`});continue}decrement("brackets");const e=P.value.slice(1);if(P.posix!==true&&e[0]==="^"&&!e.includes("/")){B=`/${B}`}P.value+=B;append({value:B});if(n.literalBrackets===false||u.hasRegexChars(e)){continue}const t=u.escapeRegex(P.value);N.output=N.output.slice(0,-P.value.length);if(n.literalBrackets===true){N.output+=t;P.value=t;continue}P.value=`(${R}${t}|${P.value})`;N.output+=P.value;continue}if(B==="{"&&n.nobrace!==true){increment("braces");const e={type:"brace",value:B,output:"(",outputIndex:N.output.length,tokensIndex:N.tokens.length};I.push(e);push(e);continue}if(B==="}"){const e=I[I.length-1];if(n.nobrace===true||!e){push({type:"text",value:B,output:B});continue}let t=")";if(e.dots===true){const e=A.slice();const r=[];for(let t=e.length-1;t>=0;t--){A.pop();if(e[t].type==="brace"){break}if(e[t].type!=="dots"){r.unshift(e[t].value)}}t=expandRange(r,n);N.backtrack=true}if(e.comma!==true&&e.dots!==true){const n=N.output.slice(0,e.outputIndex);const r=N.tokens.slice(e.tokensIndex);e.value=e.output="\\{";B=t="\\}";N.output=n;for(const e of r){N.output+=e.output||e.value}}push({type:"brace",value:B,output:t});decrement("braces");I.pop();continue}if(B==="|"){if(k.length>0){k[k.length-1].conditions++}push({type:"text",value:B});continue}if(B===","){let e=B;const t=I[I.length-1];if(t&&M[M.length-1]==="braces"){t.comma=true;e="|"}push({type:"comma",value:B,output:e});continue}if(B==="/"){if(P.type==="dot"&&N.index===N.start+1){N.start=N.index+1;N.consumed="";N.output="";A.pop();P=f;continue}push({type:"slash",value:B,output:y});continue}if(B==="."){if(N.braces>0&&P.type==="dot"){if(P.value===".")P.output=E;const e=I[I.length-1];P.type="dots";P.output+=B;P.value+=B;e.dots=true;continue}if(N.braces+N.parens===0&&P.type!=="bos"&&P.type!=="slash"){push({type:"text",value:B,output:E});continue}push({type:"dot",value:B,output:E});continue}if(B==="?"){const e=P&&P.value==="(";if(!e&&n.noextglob!==true&&G()==="("&&G(2)!=="?"){extglobOpen("qmark",B);continue}if(P&&P.type==="paren"){const e=G();let t=B;if(e==="<"&&!u.supportsLookbehinds()){throw new Error("Node.js v10 or higher is required for regex lookbehinds")}if(P.value==="("&&!/[!=<:]/.test(e)||e==="<"&&!/<([!=]|\w+>)/.test(remaining())){t=`\\${B}`}push({type:"text",value:B,output:t});continue}if(n.dot!==true&&(P.type==="slash"||P.type==="bos")){push({type:"qmark",value:B,output:$});continue}push({type:"qmark",value:B,output:v});continue}if(B==="!"){if(n.noextglob!==true&&G()==="("){if(G(2)!=="?"||!/[!=<:]/.test(G(3))){extglobOpen("negate",B);continue}}if(n.nonegate!==true&&N.index===0){negate();continue}}if(B==="+"){if(n.noextglob!==true&&G()==="("&&G(2)!=="?"){extglobOpen("plus",B);continue}if(P&&P.value==="("||n.regex===false){push({type:"plus",value:B,output:C});continue}if(P&&(P.type==="bracket"||P.type==="paren"||P.type==="brace")||N.parens>0){push({type:"plus",value:B});continue}push({type:"plus",value:C});continue}if(B==="@"){if(n.noextglob!==true&&G()==="("&&G(2)!=="?"){push({type:"at",extglob:true,value:B,output:""});continue}push({type:"text",value:B});continue}if(B!=="*"){if(B==="$"||B==="^"){B=`\\${B}`}const e=i.exec(remaining());if(e){B+=e[0];N.index+=e[0].length}push({type:"text",value:B});continue}if(P&&(P.type==="globstar"||P.star===true)){P.type="star";P.star=true;P.value+=B;P.output=w;N.backtrack=true;N.globstar=true;consume(B);continue}let t=remaining();if(n.noextglob!==true&&/^\([^?]/.test(t)){extglobOpen("star",B);continue}if(P.type==="star"){if(n.noglobstar===true){consume(B);continue}const r=P.prev;const u=r.prev;const o=r.type==="slash"||r.type==="bos";const s=u&&(u.type==="star"||u.type==="globstar");if(n.bash===true&&(!o||t[0]&&t[0]!=="/")){push({type:"star",value:B,output:""});continue}const i=N.braces>0&&(r.type==="comma"||r.type==="brace");const a=k.length&&(r.type==="pipe"||r.type==="paren");if(!o&&r.type!=="paren"&&!i&&!a){push({type:"star",value:B,output:""});continue}while(t.slice(0,3)==="/**"){const n=e[N.index+4];if(n&&n!=="/"){break}t=t.slice(3);consume("/**",3)}if(r.type==="bos"&&eos()){P.type="globstar";P.value+=B;P.output=globstar(n);N.output=P.output;N.globstar=true;consume(B);continue}if(r.type==="slash"&&r.prev.type!=="bos"&&!s&&eos()){N.output=N.output.slice(0,-(r.output+P.output).length);r.output=`(?:${r.output}`;P.type="globstar";P.output=globstar(n)+(n.strictSlashes?")":"|$)");P.value+=B;N.globstar=true;N.output+=r.output+P.output;consume(B);continue}if(r.type==="slash"&&r.prev.type!=="bos"&&t[0]==="/"){const e=t[1]!==void 0?"|$":"";N.output=N.output.slice(0,-(r.output+P.output).length);r.output=`(?:${r.output}`;P.type="globstar";P.output=`${globstar(n)}${y}|${y}${e})`;P.value+=B;N.output+=r.output+P.output;N.globstar=true;consume(B+D());push({type:"slash",value:"/",output:""});continue}if(r.type==="bos"&&t[0]==="/"){P.type="globstar";P.value+=B;P.output=`(?:^|${y}|${globstar(n)}${y})`;N.output=P.output;N.globstar=true;consume(B+D());push({type:"slash",value:"/",output:""});continue}N.output=N.output.slice(0,-P.output.length);P.type="globstar";P.output=globstar(n);P.value+=B;N.output+=P.output;N.globstar=true;consume(B);continue}const r={type:"star",value:B,output:w};if(n.bash===true){r.output=".*?";if(P.type==="bos"||P.type==="slash"){r.output=L+r.output}push(r);continue}if(P&&(P.type==="bracket"||P.type==="paren")&&n.regex===true){r.output=B;push(r);continue}if(N.index===N.start||P.type==="slash"||P.type==="dot"){if(P.type==="dot"){N.output+=S;P.output+=S}else if(n.dot===true){N.output+=H;P.output+=H}else{N.output+=L;P.output+=L}if(G()!=="*"){N.output+=d;P.output+=d}}push(r)}while(N.brackets>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing","]"));N.output=u.escapeLast(N.output,"[");decrement("brackets")}while(N.parens>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing",")"));N.output=u.escapeLast(N.output,"(");decrement("parens")}while(N.braces>0){if(n.strictBrackets===true)throw new SyntaxError(syntaxError("closing","}"));N.output=u.escapeLast(N.output,"{");decrement("braces")}if(n.strictSlashes!==true&&(P.type==="star"||P.type==="bracket")){push({type:"maybe_slash",value:"",output:`${y}?`})}if(N.backtrack===true){N.output="";for(const e of N.tokens){N.output+=e.output!=null?e.output:e.value;if(e.suffix){N.output+=e.suffix}}}return N};parse.fastpaths=(e,t)=>{const n={...t};const s=typeof n.maxLength==="number"?Math.min(o,n.maxLength):o;const i=e.length;if(i>s){throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${s}`)}e=l[e]||e;const a=u.isWindows(t);const{DOT_LITERAL:c,SLASH_LITERAL:p,ONE_CHAR:f,DOTS_SLASH:A,NO_DOT:R,NO_DOTS:_,NO_DOTS_SLASH:h,STAR:g,START_ANCHOR:E}=r.globChars(a);const C=n.dot?_:R;const y=n.dot?h:R;const d=n.capture?"":"?:";const x={negated:false,prefix:""};let b=n.bash===true?".*?":g;if(n.capture){b=`(${b})`}const globstar=e=>{if(e.noglobstar===true)return b;return`(${d}(?:(?!${E}${e.dot?A:c}).)*?)`};const create=e=>{switch(e){case"*":return`${C}${f}${b}`;case".*":return`${c}${f}${b}`;case"*.*":return`${C}${b}${c}${f}${b}`;case"*/*":return`${C}${b}${p}${f}${y}${b}`;case"**":return C+globstar(n);case"**/*":return`(?:${C}${globstar(n)}${p})?${y}${f}${b}`;case"**/*.*":return`(?:${C}${globstar(n)}${p})?${y}${b}${c}${f}${b}`;case"**/.*":return`(?:${C}${globstar(n)}${p})?${c}${f}${b}`;default:{const t=/^(.*?)\.(\w+)$/.exec(e);if(!t)return;const n=create(t[1]);if(!n)return;return n+c+t[2]}}};const S=u.removePrefix(e,x);let H=create(S);if(H&&n.strictSlashes!==true){H+=`${p}?`}return H};e.exports=parse},631:function(e,t,n){const r=n(17);const u=n(640);const o=n(986);const s=n(658);const i=n(820);const isObject=e=>e&&typeof e==="object"&&!Array.isArray(e);const picomatch=(e,t,n=false)=>{if(Array.isArray(e)){const r=e.map((e=>picomatch(e,t,n)));const arrayMatcher=e=>{for(const t of r){const n=t(e);if(n)return n}return false};return arrayMatcher}const r=isObject(e)&&e.tokens&&e.input;if(e===""||typeof e!=="string"&&!r){throw new TypeError("Expected pattern to be a non-empty string")}const u=t||{};const o=s.isWindows(t);const i=r?picomatch.compileRe(e,t):picomatch.makeRe(e,t,false,true);const a=i.state;delete i.state;let isIgnored=()=>false;if(u.ignore){const e={...t,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(u.ignore,e,n)}const matcher=(n,r=false)=>{const{isMatch:s,match:l,output:c}=picomatch.test(n,i,t,{glob:e,posix:o});const p={glob:e,state:a,regex:i,posix:o,input:n,output:c,match:l,isMatch:s};if(typeof u.onResult==="function"){u.onResult(p)}if(s===false){p.isMatch=false;return r?p:false}if(isIgnored(n)){if(typeof u.onIgnore==="function"){u.onIgnore(p)}p.isMatch=false;return r?p:false}if(typeof u.onMatch==="function"){u.onMatch(p)}return r?p:true};if(n){matcher.state=a}return matcher};picomatch.test=(e,t,n,{glob:r,posix:u}={})=>{if(typeof e!=="string"){throw new TypeError("Expected input to be a string")}if(e===""){return{isMatch:false,output:""}}const o=n||{};const i=o.format||(u?s.toPosixSlashes:null);let a=e===r;let l=a&&i?i(e):e;if(a===false){l=i?i(e):e;a=l===r}if(a===false||o.capture===true){if(o.matchBase===true||o.basename===true){a=picomatch.matchBase(e,t,n,u)}else{a=t.exec(l)}}return{isMatch:Boolean(a),match:a,output:l}};picomatch.matchBase=(e,t,n,u=s.isWindows(n))=>{const o=t instanceof RegExp?t:picomatch.makeRe(t,n);return o.test(r.basename(e))};picomatch.isMatch=(e,t,n)=>picomatch(t,n)(e);picomatch.parse=(e,t)=>{if(Array.isArray(e))return e.map((e=>picomatch.parse(e,t)));return o(e,{...t,fastpaths:false})};picomatch.scan=(e,t)=>u(e,t);picomatch.compileRe=(e,t,n=false,r=false)=>{if(n===true){return e.output}const u=t||{};const o=u.contains?"":"^";const s=u.contains?"":"$";let i=`${o}(?:${e.output})${s}`;if(e&&e.negated===true){i=`^(?!${i}).*$`}const a=picomatch.toRegex(i,t);if(r===true){a.state=e}return a};picomatch.makeRe=(e,t={},n=false,r=false)=>{if(!e||typeof e!=="string"){throw new TypeError("Expected a non-empty string")}let u={negated:false,fastpaths:true};if(t.fastpaths!==false&&(e[0]==="."||e[0]==="*")){u.output=o.fastpaths(e,t)}if(!u.output){u=o(e,t)}return picomatch.compileRe(u,t,n,r)};picomatch.toRegex=(e,t)=>{try{const n=t||{};return new RegExp(e,n.flags||(n.nocase?"i":""))}catch(e){if(t&&t.debug===true)throw e;return/$^/}};picomatch.constants=i;e.exports=picomatch},640:function(e,t,n){const r=n(658);const{CHAR_ASTERISK:u,CHAR_AT:o,CHAR_BACKWARD_SLASH:s,CHAR_COMMA:i,CHAR_DOT:a,CHAR_EXCLAMATION_MARK:l,CHAR_FORWARD_SLASH:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:R,CHAR_QUESTION_MARK:_,CHAR_RIGHT_CURLY_BRACE:h,CHAR_RIGHT_PARENTHESES:g,CHAR_RIGHT_SQUARE_BRACKET:E}=n(820);const isPathSeparator=e=>e===c||e===s;const depth=e=>{if(e.isPrefix!==true){e.depth=e.isGlobstar?Infinity:1}};const scan=(e,t)=>{const n=t||{};const C=e.length-1;const y=n.parts===true||n.scanToEnd===true;const d=[];const x=[];const b=[];let S=e;let H=-1;let v=0;let $=0;let m=false;let T=false;let L=false;let O=false;let w=false;let N=false;let k=false;let I=false;let M=false;let P=false;let B=0;let G;let D;let U={value:"",depth:0,isGlob:false};const eos=()=>H>=C;const peek=()=>S.charCodeAt(H+1);const advance=()=>{G=D;return S.charCodeAt(++H)};while(H<C){D=advance();let e;if(D===s){k=U.backslashes=true;D=advance();if(D===p){N=true}continue}if(N===true||D===p){B++;while(eos()!==true&&(D=advance())){if(D===s){k=U.backslashes=true;advance();continue}if(D===p){B++;continue}if(N!==true&&D===a&&(D=advance())===a){m=U.isBrace=true;L=U.isGlob=true;P=true;if(y===true){continue}break}if(N!==true&&D===i){m=U.isBrace=true;L=U.isGlob=true;P=true;if(y===true){continue}break}if(D===h){B--;if(B===0){N=false;m=U.isBrace=true;P=true;break}}}if(y===true){continue}break}if(D===c){d.push(H);x.push(U);U={value:"",depth:0,isGlob:false};if(P===true)continue;if(G===a&&H===v+1){v+=2;continue}$=H+1;continue}if(n.noext!==true){const e=D===R||D===o||D===u||D===_||D===l;if(e===true&&peek()===f){L=U.isGlob=true;O=U.isExtglob=true;P=true;if(D===l&&H===v){M=true}if(y===true){while(eos()!==true&&(D=advance())){if(D===s){k=U.backslashes=true;D=advance();continue}if(D===g){L=U.isGlob=true;P=true;break}}continue}break}}if(D===u){if(G===u)w=U.isGlobstar=true;L=U.isGlob=true;P=true;if(y===true){continue}break}if(D===_){L=U.isGlob=true;P=true;if(y===true){continue}break}if(D===A){while(eos()!==true&&(e=advance())){if(e===s){k=U.backslashes=true;advance();continue}if(e===E){T=U.isBracket=true;L=U.isGlob=true;P=true;break}}if(y===true){continue}break}if(n.nonegate!==true&&D===l&&H===v){I=U.negated=true;v++;continue}if(n.noparen!==true&&D===f){L=U.isGlob=true;if(y===true){while(eos()!==true&&(D=advance())){if(D===f){k=U.backslashes=true;D=advance();continue}if(D===g){P=true;break}}continue}break}if(L===true){P=true;if(y===true){continue}break}}if(n.noext===true){O=false;L=false}let K=S;let F="";let Q="";if(v>0){F=S.slice(0,v);S=S.slice(v);$-=v}if(K&&L===true&&$>0){K=S.slice(0,$);Q=S.slice($)}else if(L===true){K="";Q=S}else{K=S}if(K&&K!==""&&K!=="/"&&K!==S){if(isPathSeparator(K.charCodeAt(K.length-1))){K=K.slice(0,-1)}}if(n.unescape===true){if(Q)Q=r.removeBackslashes(Q);if(K&&k===true){K=r.removeBackslashes(K)}}const X={prefix:F,input:e,start:v,base:K,glob:Q,isBrace:m,isBracket:T,isGlob:L,isExtglob:O,isGlobstar:w,negated:I,negatedExtglob:M};if(n.tokens===true){X.maxDepth=0;if(!isPathSeparator(D)){x.push(U)}X.tokens=x}if(n.parts===true||n.tokens===true){let t;for(let r=0;r<d.length;r++){const u=t?t+1:v;const o=d[r];const s=e.slice(u,o);if(n.tokens){if(r===0&&v!==0){x[r].isPrefix=true;x[r].value=F}else{x[r].value=s}depth(x[r]);X.maxDepth+=x[r].depth}if(r!==0||s!==""){b.push(s)}t=o}if(t&&t+1<e.length){const r=e.slice(t+1);b.push(r);if(n.tokens){x[x.length-1].value=r;depth(x[x.length-1]);X.maxDepth+=x[x.length-1].depth}}X.slashes=d;X.parts=b}return X};e.exports=scan},658:function(e,t,n){const r=n(17);const u=process.platform==="win32";const{REGEX_BACKSLASH:o,REGEX_REMOVE_BACKSLASH:s,REGEX_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_GLOBAL:a}=n(820);t.isObject=e=>e!==null&&typeof e==="object"&&!Array.isArray(e);t.hasRegexChars=e=>i.test(e);t.isRegexChar=e=>e.length===1&&t.hasRegexChars(e);t.escapeRegex=e=>e.replace(a,"\\$1");t.toPosixSlashes=e=>e.replace(o,"/");t.removeBackslashes=e=>e.replace(s,(e=>e==="\\"?"":e));t.supportsLookbehinds=()=>{const e=process.version.slice(1).split(".").map(Number);if(e.length===3&&e[0]>=9||e[0]===8&&e[1]>=10){return true}return false};t.isWindows=e=>{if(e&&typeof e.windows==="boolean"){return e.windows}return u===true||r.sep==="\\"};t.escapeLast=(e,n,r)=>{const u=e.lastIndexOf(n,r);if(u===-1)return e;if(e[u-1]==="\\")return t.escapeLast(e,n,u-1);return`${e.slice(0,u)}\\${e.slice(u)}`};t.removePrefix=(e,t={})=>{let n=e;if(n.startsWith("./")){n=n.slice(2);t.prefix="./"}return n};t.wrapOutput=(e,t={},n={})=>{const r=n.contains?"":"^";const u=n.contains?"":"$";let o=`${r}(?:${e})${u}`;if(t.negated===true){o=`(?:^(?!${o}).*$)`}return o}},211:function(e,t,n){
/*!
 * to-regex-range <https://github.com/micromatch/to-regex-range>
 *
 * Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */
const r=n(387);const toRegexRange=(e,t,n)=>{if(r(e)===false){throw new TypeError("toRegexRange: expected the first argument to be a number")}if(t===void 0||e===t){return String(e)}if(r(t)===false){throw new TypeError("toRegexRange: expected the second argument to be a number.")}let u={relaxZeros:true,...n};if(typeof u.strictZeros==="boolean"){u.relaxZeros=u.strictZeros===false}let o=String(u.relaxZeros);let s=String(u.shorthand);let i=String(u.capture);let a=String(u.wrap);let l=e+":"+t+"="+o+s+i+a;if(toRegexRange.cache.hasOwnProperty(l)){return toRegexRange.cache[l].result}let c=Math.min(e,t);let p=Math.max(e,t);if(Math.abs(c-p)===1){let n=e+"|"+t;if(u.capture){return`(${n})`}if(u.wrap===false){return n}return`(?:${n})`}let f=hasPadding(e)||hasPadding(t);let A={min:e,max:t,a:c,b:p};let R=[];let _=[];if(f){A.isPadded=f;A.maxLen=String(A.max).length}if(c<0){let e=p<0?Math.abs(p):1;_=splitToPatterns(e,Math.abs(c),A,u);c=A.a=0}if(p>=0){R=splitToPatterns(c,p,A,u)}A.negatives=_;A.positives=R;A.result=collatePatterns(_,R,u);if(u.capture===true){A.result=`(${A.result})`}else if(u.wrap!==false&&R.length+_.length>1){A.result=`(?:${A.result})`}toRegexRange.cache[l]=A;return A.result};function collatePatterns(e,t,n){let r=filterPatterns(e,t,"-",false,n)||[];let u=filterPatterns(t,e,"",false,n)||[];let o=filterPatterns(e,t,"-?",true,n)||[];let s=r.concat(o).concat(u);return s.join("|")}function splitToRanges(e,t){let n=1;let r=1;let u=countNines(e,n);let o=new Set([t]);while(e<=u&&u<=t){o.add(u);n+=1;u=countNines(e,n)}u=countZeros(t+1,r)-1;while(e<u&&u<=t){o.add(u);r+=1;u=countZeros(t+1,r)-1}o=[...o];o.sort(compare);return o}function rangeToPattern(e,t,n){if(e===t){return{pattern:e,count:[],digits:0}}let r=zip(e,t);let u=r.length;let o="";let s=0;for(let e=0;e<u;e++){let[t,u]=r[e];if(t===u){o+=t}else if(t!=="0"||u!=="9"){o+=toCharacterClass(t,u,n)}else{s++}}if(s){o+=n.shorthand===true?"\\d":"[0-9]"}return{pattern:o,count:[s],digits:u}}function splitToPatterns(e,t,n,r){let u=splitToRanges(e,t);let o=[];let s=e;let i;for(let e=0;e<u.length;e++){let t=u[e];let a=rangeToPattern(String(s),String(t),r);let l="";if(!n.isPadded&&i&&i.pattern===a.pattern){if(i.count.length>1){i.count.pop()}i.count.push(a.count[0]);i.string=i.pattern+toQuantifier(i.count);s=t+1;continue}if(n.isPadded){l=padZeros(t,n,r)}a.string=l+a.pattern+toQuantifier(a.count);o.push(a);s=t+1;i=a}return o}function filterPatterns(e,t,n,r,u){let o=[];for(let u of e){let{string:e}=u;if(!r&&!contains(t,"string",e)){o.push(n+e)}if(r&&contains(t,"string",e)){o.push(n+e)}}return o}function zip(e,t){let n=[];for(let r=0;r<e.length;r++)n.push([e[r],t[r]]);return n}function compare(e,t){return e>t?1:t>e?-1:0}function contains(e,t,n){return e.some((e=>e[t]===n))}function countNines(e,t){return Number(String(e).slice(0,-t)+"9".repeat(t))}function countZeros(e,t){return e-e%Math.pow(10,t)}function toQuantifier(e){let[t=0,n=""]=e;if(n||t>1){return`{${t+(n?","+n:"")}}`}return""}function toCharacterClass(e,t,n){return`[${e}${t-e===1?"":"-"}${t}]`}function hasPadding(e){return/^-?(0+)\d/.test(e)}function padZeros(e,t,n){if(!t.isPadded){return e}let r=Math.abs(t.maxLen-String(e).length);let u=n.relaxZeros!==false;switch(r){case 0:return"";case 1:return u?"0?":"0";case 2:return u?"0{0,2}":"00";default:{return u?`0{0,${r}}`:`0{${r}}`}}}toRegexRange.cache={};toRegexRange.clearCache=()=>toRegexRange.cache={};e.exports=toRegexRange},17:function(e){e.exports=require("path")},837:function(e){e.exports=require("util")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var u=t[n]={exports:{}};var o=true;try{e[n](u,u.exports,__nccwpck_require__);o=false}finally{if(o)delete t[n]}return u.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var n=__nccwpck_require__(224);module.exports=n})();
(function(){"use strict";var t={81:function(t){t.exports=require("child_process")},358:function(t){t.exports=require("fs")},292:function(t){t.exports=require("fs/promises")},17:function(t){t.exports=require("path")},781:function(t){t.exports=require("stream")},837:function(t){t.exports=require("util")},796:function(t){t.exports=require("zlib")}};var e={};function __nccwpck_require__(i){var n=e[i];if(n!==undefined){return n.exports}var r=e[i]={exports:{}};var s=true;try{t[i](r,r.exports,__nccwpck_require__);s=false}finally{if(s)delete e[i]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var i={};!function(){var t=i;Object.defineProperty(t,"__esModule",{value:true});t.createStream=t.RotatingFileStream=t.RotatingFileStreamError=void 0;const e=__nccwpck_require__(81);const n=__nccwpck_require__(796);const r=__nccwpck_require__(781);const s=__nccwpck_require__(358);const o=__nccwpck_require__(292);const a=__nccwpck_require__(17);const h=__nccwpck_require__(837);async function exists(t){return new Promise((e=>(0,s.access)(t,s.constants.F_OK,(t=>e(!t)))))}class RotatingFileStreamError extends Error{constructor(){super("Too many destination file attempts");this.code="RFS-TOO-MANY"}}t.RotatingFileStreamError=RotatingFileStreamError;class RotatingFileStream extends r.Writable{constructor(t,i){const{encoding:r,history:a,maxFiles:h,maxSize:c,path:u}=i;super({decodeStrings:true,defaultEncoding:r});this.createGzip=n.createGzip;this.exec=e.exec;this.filename=u+t(null);this.fsCreateReadStream=s.createReadStream;this.fsCreateWriteStream=s.createWriteStream;this.fsOpen=o.open;this.fsReadFile=o.readFile;this.fsStat=o.stat;this.generator=t;this.maxTimeout=2147483640;this.options=i;this.stdout=process.stdout;if(h||c)i.history=u+(a?a:this.generator(null)+".txt");this.on("close",(()=>this.finished?null:this.emit("finish")));this.on("finish",(()=>this.finished=this.clear()));(async()=>{try{this.initPromise=this.init();await this.initPromise;delete this.initPromise}catch(t){}})()}_destroy(t,e){this.refinal(t,e)}_final(t){this.refinal(undefined,t)}_write(t,e,i){this.rewrite([{chunk:t,encoding:e}],0,i)}_writev(t,e){this.rewrite(t,0,e)}async refinal(t,e){try{this.clear();if(this.initPromise)await this.initPromise;if(this.timeoutPromise)await this.timeoutPromise;await this.reclose()}catch(i){return e(t||i)}e(t)}async rewrite(t,e,i){const{size:n,teeToStdout:r}=this.options;try{if(this.initPromise)await this.initPromise;if(this.timeoutPromise)await this.timeoutPromise;for(let e=0;e<t.length;++e){const{chunk:i}=t[e];this.size+=i.length;await this.file.write(i);if(r&&!this.stdout.destroyed)this.stdout.write(i);if(n&&this.size>=n)await this.rotate()}}catch(t){return i(t)}i()}async init(){const{immutable:t,initialRotation:e,interval:i,size:n}=this.options;if(t)return new Promise(((t,e)=>process.nextTick((()=>this.immutate(true).then(t).catch(e)))));let r;try{r=await(0,o.stat)(this.filename)}catch(t){if(t.code!=="ENOENT")throw t;return this.reopen(0)}if(!r.isFile())throw new Error(`Can't write on: ${this.filename} (it is not a file)`);if(e){this.intervalBounds(this.now());const t=this.prev;this.intervalBounds(new Date(r.mtime.getTime()));if(t!==this.prev)return this.rotate()}this.size=r.size;if(!n||r.size<n)return this.reopen(r.size);if(i)this.intervalBounds(this.now());return this.rotate()}async makePath(t){return(0,o.mkdir)(t.split(a.sep).slice(0,-1).join(a.sep),{recursive:true})}async reopen(t){let e;try{e=await(0,o.open)(this.filename,"a",this.options.mode)}catch(t){if(t.code!=="ENOENT")throw t;await this.makePath(this.filename);e=await(0,o.open)(this.filename,"a",this.options.mode)}this.file=e;this.size=t;this.interval();this.emit("open",this.filename)}async reclose(){const{file:t}=this;if(!t)return;delete this.file;return t.close()}now(){return new Date}async rotate(){const{immutable:t,rotate:e}=this.options;this.size=0;this.rotation=this.now();this.clear();this.emit("rotation");await this.reclose();if(e)return this.classical();if(t)return this.immutate(false);return this.move()}async findName(){const{interval:t,path:e,intervalBoundary:i}=this.options;for(let n=1;n<1e3;++n){const r=e+this.generator(t&&i?new Date(this.prev):this.rotation,n);if(!await exists(r))return r}throw new RotatingFileStreamError}async move(){const{compress:t}=this.options;const e=await this.findName();await this.touch(e);if(t)await this.compress(e);else await(0,o.rename)(this.filename,e);return this.rotated(e)}async touch(t){let e;try{e=await this.fsOpen(t,"a")}catch(i){if(i.code!=="ENOENT")throw i;await this.makePath(t);e=await(0,o.open)(t,"a")}await e.close();return(0,o.unlink)(t)}async classical(){const{compress:t,path:e,rotate:i}=this.options;let n="";for(let r=i;r>0;--r){const i=e+this.generator(r);const s=r===1?this.filename:e+this.generator(r-1);if(!await exists(s))continue;if(!n)n=i;if(r===1&&t)await this.compress(i);else{try{await(0,o.rename)(s,i)}catch(t){if(t.code!=="ENOENT")throw t;await this.makePath(i);await(0,o.rename)(s,i)}}}return this.rotated(n)}clear(){if(this.timeout){clearTimeout(this.timeout);this.timeout=null}return true}intervalBoundsBig(t){const e=t.getFullYear();let i=t.getMonth();let n=t.getDate();let r=t.getHours();const{num:s,unit:o}=this.options.interval;if(o==="M"){n=1;r=0}else if(o==="d")r=0;else r=parseInt(r/s,10)*s;this.prev=new Date(e,i,n,r,0,0,0).getTime();if(o==="M")i+=s;else if(o==="d")n+=s;else r+=s;this.next=new Date(e,i,n,r,0,0,0).getTime()}intervalBounds(t){const e=this.options.interval.unit;if(e==="M"||e==="d"||e==="h")this.intervalBoundsBig(t);else{let i=1e3*this.options.interval.num;if(e==="m")i*=60;this.prev=parseInt(t.getTime()/i,10)*i;this.next=this.prev+i}return new Date(this.prev)}interval(){if(!this.options.interval)return;this.intervalBounds(this.now());const set=async()=>{const t=this.next-this.now().getTime();if(t<=0){try{this.timeoutPromise=this.rotate();await this.timeoutPromise;delete this.timeoutPromise}catch(t){}}else{this.timeout=setTimeout(set,t>this.maxTimeout?this.maxTimeout:t);this.timeout.unref()}};set()}async compress(t){const{compress:e}=this.options;if(typeof e==="function"){await new Promise(((i,n)=>{this.exec(e(this.filename,t),((t,e,r)=>{this.emit("external",e,r);t?n(t):i()}))}))}else await this.gzip(t);return(0,o.unlink)(this.filename)}async gzip(t){const{mode:e}=this.options;const i=e?{mode:e}:{};const n=this.fsCreateReadStream(this.filename,{});const r=this.fsCreateWriteStream(t,i);const s=this.createGzip();return new Promise(((t,e)=>{[n,r,s].map((t=>t.once("error",e)));r.once("finish",t);n.pipe(s).pipe(r)}))}async rotated(t){const{maxFiles:e,maxSize:i}=this.options;if(e||i)await this.history(t);this.emit("rotated",t);return this.reopen(0)}async history(t){const{history:e,maxFiles:i,maxSize:n}=this.options;const r=[];let s=[t];try{const i=await this.fsReadFile(e,"utf8");s=[...i.toString().split("\n"),t]}catch(t){if(t.code!=="ENOENT")throw t}for(const t of s){if(t){try{const e=await this.fsStat(t);if(e.isFile()){r.push({name:t,size:e.size,time:e.ctime.getTime()})}else this.emit("warning",new Error(`File '${t}' contained in history is not a regular file`))}catch(t){if(t.code!=="ENOENT")throw t}}}r.sort(((t,e)=>t.time-e.time));if(i){while(r.length>i){const t=r.shift();await(0,o.unlink)(t.name);this.emit("removed",t.name,true)}}if(n){while(r.reduce(((t,e)=>t+e.size),0)>n){const t=r.shift();await(0,o.unlink)(t.name);this.emit("removed",t.name,false)}}await(0,o.writeFile)(e,r.map((t=>t.name)).join("\n")+"\n","utf-8");this.emit("history")}async immutate(t){const{size:e}=this.options;const i=this.now();for(let n=1;n<1e3;++n){let r=0;let s=undefined;this.filename=this.options.path+this.generator(i,n);try{s=await this.fsStat(this.filename)}catch(t){if(t.code!=="ENOENT")throw t}if(s){r=s.size;if(!s.isFile())throw new Error(`Can't write on: '${this.filename}' (it is not a file)`);if(e&&r>=e)continue}if(t){this.last=this.filename;return this.reopen(r)}await this.rotated(this.last);this.last=this.filename;return}throw new RotatingFileStreamError}}t.RotatingFileStream=RotatingFileStream;function buildNumberCheck(t){return(e,i,n)=>{const r=parseInt(n,10);if(e!=="number"||r!==n||r<=0)throw new Error(`'${t}' option must be a positive integer number`)}}function buildStringCheck(t,e){return(i,n,r)=>{if(i!=="string")throw new Error(`Don't know how to handle 'options.${t}' type: ${i}`);n[t]=e(r)}}function checkMeasure(t,e,i){const n={};n.num=parseInt(t,10);if(isNaN(n.num))throw new Error(`Unknown 'options.${e}' format: ${t}`);if(n.num<=0)throw new Error(`A positive integer number is expected for 'options.${e}'`);n.unit=t.replace(/^[ 0]*/g,"").substr((n.num+"").length,1);if(n.unit.length===0)throw new Error(`Missing unit for 'options.${e}'`);if(!i[n.unit])throw new Error(`Unknown 'options.${e}' unit: ${n.unit}`);return n}const c={M:true,d:true,h:true,m:true,s:true};function checkIntervalUnit(t,e,i){if(parseInt(i/t.num,10)*t.num!==i)throw new Error(`An integer divider of ${i} is expected as ${e} for 'options.interval'`)}function checkInterval(t){const e=checkMeasure(t,"interval",c);switch(e.unit){case"h":checkIntervalUnit(e,"hours",24);break;case"m":checkIntervalUnit(e,"minutes",60);break;case"s":checkIntervalUnit(e,"seconds",60);break}return e}const u={B:true,G:true,K:true,M:true};function checkSize(t){const e=checkMeasure(t,"size",u);if(e.unit==="K")return e.num*1024;if(e.unit==="M")return e.num*1048576;if(e.unit==="G")return e.num*1073741824;return e.num}const l={encoding:(t,e,i)=>new h.TextDecoder(i),immutable:()=>{},initialRotation:()=>{},interval:buildStringCheck("interval",checkInterval),intervalBoundary:()=>{},maxFiles:buildNumberCheck("maxFiles"),maxSize:buildStringCheck("maxSize",checkSize),mode:()=>{},omitExtension:()=>{},rotate:buildNumberCheck("rotate"),size:buildStringCheck("size",checkSize),teeToStdout:()=>{},compress:(t,e,i)=>{if(!i)throw new Error("A value for 'options.compress' must be specified");if(t==="boolean")return e.compress=(t,e)=>`cat ${t} | gzip -c9 > ${e}`;if(t==="function")return;if(t!=="string")throw new Error(`Don't know how to handle 'options.compress' type: ${t}`);if(i!=="gzip")throw new Error(`Don't know how to handle compression method: ${i}`)},history:t=>{if(t!=="string")throw new Error(`Don't know how to handle 'options.history' type: ${t}`)},path:(t,e,i)=>{if(t!=="string")throw new Error(`Don't know how to handle 'options.path' type: ${t}`);if(i[i.length-1]!==a.sep)e.path=i+a.sep}};function checkOpts(t){const e={};for(const i in t){const n=t[i];const r=typeof n;if(!(i in l))throw new Error(`Unknown option: ${i}`);e[i]=t[i];l[i](r,e,n)}if(!e.path)e.path="";if(!e.interval){delete e.immutable;delete e.initialRotation;delete e.intervalBoundary}if(e.rotate){delete e.history;delete e.immutable;delete e.maxFiles;delete e.maxSize;delete e.intervalBoundary}if(e.immutable)delete e.compress;if(!e.intervalBoundary)delete e.initialRotation;return e}function createClassical(t,e,i){return n=>n?`${t}.${n}${e&&!i?".gz":""}`:t}function createGenerator(t,e,i){const pad=t=>(t>9?"":"0")+t;return(n,r)=>{if(!n)return t;const s=n.getFullYear()+""+pad(n.getMonth()+1);const o=pad(n.getDate());const a=pad(n.getHours());const h=pad(n.getMinutes());return s+o+"-"+a+h+"-"+pad(r)+"-"+t+(e&&!i?".gz":"")}}function createStream(t,e){if(typeof e==="undefined")e={};else if(typeof e!=="object")throw new Error(`The "options" argument must be of type object. Received type ${typeof e}`);const i=checkOpts(e);const{compress:n,omitExtension:r}=i;let s;if(typeof t==="string")s=e.rotate?createClassical(t,n!==undefined,r):createGenerator(t,n!==undefined,r);else if(typeof t==="function")s=t;else throw new Error(`The "filename" argument must be one of type string or function. Received type ${typeof t}`);return new RotatingFileStream(s,i)}t.createStream=createStream}();module.exports=i})();
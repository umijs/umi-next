name: CI

env:
  NODE_OPTIONS: --max-old-space-size=6144

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'examples/**'
      - 'docs/**'
      - '**/*.md'
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-node${{ matrix.node-version }}-

      # We use week in the turbo cache key to keep the cache from infinitely growing
      - name: Get cache expires mark
        id: get-week
        run: echo ::set-output name=WEEK::$(date +%U)

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-
            turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-

      - name: Install dependencies
        run: pnpm i

      - run: pnpm build
      - run: pnpm tsc --noEmit
      - run: pnpm test
        env:
          CI: true
          NODE_ENV: test

  coverage:
    permissions:
      checks: write
      pull-requests: write
      contents: read
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org/'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-node-jest-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-node-jest-${{ matrix.node-version }}-

      - run: pnpm install

      - run: pnpm build

      - name: Jest coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script:  pnpm run test -- --ci --json --coverage --testLocationInResults --outputFile=report.json
          package-manager: pnpm
          skip-step: install
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # turn off base compare for coverage report
          base-coverage-file: report.json
